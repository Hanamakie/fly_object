<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离 
注意：使用mapper代理方法开发，namespace有特殊重要的作用
-->
<mapper namespace="com.neuedu.dao.gyl.ArticleAddMapper">
	<!-- 文章分类查询 -->
	<select id="getspecial" parameterType="special" resultType="special">
		select * from fly_special_column
	</select>
	<!-- 飞吻数类查询 -->
	<select id="getkiss" parameterType="kiss" resultType="kiss">
		select * from fly_kiss
	</select>
	<!-- 新增文章 -->
	<insert id="publishAnArticle" parameterType="release">
		insert into fly_release 
		(title,content,user_id,view_count,special_column_id,fly_kiss_id) 
		values (#{title},#{content},#{user_id},#{view_count},#{special_column_id},#{fly_kiss_id})
	</insert>
	<!-- 查询后台“我发的帖子” -->
	<select id="postrelease" parameterType="int" resultType="release">
		select 
			r.id,r.title,r.view_count,r.create_time 
		from 
			fly_release r,fly_customer c 
		<where>
			r.user_id = c.id and c.id = #{value}
		</where>
	</select>
	<!-- 获取后台用户文章总条数 -->
	<select id="getreleasecount" parameterType="int" resultType="int">
		select count(*) from fly_release r,fly_customer c where  r.user_id = c.id and c.id = #{value}
	</select>
	<!-- 获取文章信息 -->
	<select id="getsumcontext" parameterType="int" resultType="release">
		select r.id,r.title,r.content,r.fly_kiss_id,k.kiss_num,r.view_count,s.special_column,r.create_time from
		fly_release r,fly_customer c ,fly_special_column s, fly_kiss k 
		where r.special_column_id = s.id and r.user_id = c.id and r.fly_kiss_id = k.id and r.static = 0 and  r.id = 27 
		GROUP BY r.id,r.title,r.content,r.fly_kiss_id,r.view_count,s.special_column,r.create_time
		limit 1
	</select>
</mapper>


